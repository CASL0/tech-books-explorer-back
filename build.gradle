plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'net.ltgt.errorprone' version '4.2.0'
    id 'com.diffplug.spotless' version '7.0.4'
}

group = 'io.github.casl0'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.flywaydb:flyway-mysql'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    runtimeOnly 'com.mysql:mysql-connector-j'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    errorprone 'com.google.errorprone:error_prone_core:2.+'
}

tasks.named('test') {
    useJUnitPlatform()
}

dependencyLocking {
    lockAllConfigurations()
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:0.4.302'
    imageName = "ghcr.io/casl0/${project.name}:${project.version}"
    createdDate = 'now'
    docker {
        publishRegistry {
            username = System.getenv('DOCKER_PUBLISH_USERNAME')
            password = System.getenv('DOCKER_PUBLISH_PASSWORD')
        }
    }
}

spotless {
    java {
        importOrder()
        removeUnusedImports()
        googleJavaFormat().skipJavadocFormatting()
        formatAnnotations()
        leadingTabsToSpaces()
        trimTrailingWhitespace()
        endWithNewline()
    }
    groovyGradle {
        target '*.gradle'
        greclipse()
        leadingTabsToSpaces()
        trimTrailingWhitespace()
        endWithNewline()
    }
    sql {
        target '**/*.sql'
        dbeaver()
    }
}
