openapi: "3.0.2"
info:
  title: Tech Books Explorer
  version: "1.0"
servers:
  - url: https://localhost:8091/api/v1
    description: ローカルホスト
components:
  schemas:
    BookRequest:
      type: object
      required:
        - title
        - isbn
        - url
        - publisher
        - publishedAt
      properties:
        title:
          type: string
        isbn:
          type: string
        price:
          type: string
        url:
          type: string
        publisher:
          type: string
        publishedAt:
          type: string
    Error:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: string
        detail:
          type: string
        instance:
          type: string
    Book:
      type: object
      required:
        - id
        - title
        - isbn
        - url
        - publisher
        - publishedAt
      properties:
        id:
          type: integer
        title:
          type: string
        isbn:
          type: string
        price:
          type: string
        url:
          type: string
        publisher:
          type: string
        publishedAt:
          type: string
    Books:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Book"
paths:
  /books:
    post:
      description: "技術書を新規に作成する"
      operationId: createBooks
      tags:
        - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookRequest"
      responses:
        "201":
          description: 作成成功
        "400":
          description: バリデーションエラー
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      description: "技術書のリストを取得する"
      operationId: listBooks
      tags:
        - books
      parameters:
        - name: page
          in: query
          required: false
          description: ページ番号（既定値 0）
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          required: false
          description: 1ページのサイズ（既定値 20）
          schema:
            type: integer
            maximum: 100
            minimum: 1
            default: 20
        - name: q
          in: query
          required: false
          description: 取得する技術書のキーワード
          schema:
            type: string
            maxLength: 255
      responses:
        "200":
          description: 技術書のページ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Books"
        "404":
          description: キーワードに該当する技術書が見つからなかった
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /books/{bookId}:
    get:
      description: "指定の技術書を取得する"
      operationId: showBookById
      tags:
        - books
      parameters:
        - name: bookId
          in: path
          required: true
          description: 技術書ID
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        "404":
          description: IDに該当する技術書が見つからなかった
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /books/isbn/{isbn}:
    get:
      description: "ISBNから技術書を取得する"
      operationId: showBookByIsbn
      tags:
        - books
      parameters:
        - name: isbn
          in: path
          required: true
          description: 技術書ISBN
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        "404":
          description: ISBNに該当する技術書が見つからなかった
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
